<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:markdig="clr-namespace:Markdig.Wpf;assembly=Markdig.Wpf">
    <Color x:Key="BackgroundColor">#253139</Color>
    <Color x:Key="HeavyGreyColor">#525b60</Color>
    <Color x:Key="MediumGreyColor">#848d91</Color>
    <Color x:Key="TextColor">#ffffff</Color>
    <Color x:Key="KeyPointColor">#b330b7</Color>

    <SolidColorBrush x:Key="BackgroundBrush">#253139</SolidColorBrush>
    <SolidColorBrush x:Key="HeavyGreyBrush">#525b60</SolidColorBrush>
    <SolidColorBrush x:Key="MediumGreyBrush">#848d91</SolidColorBrush>
    <SolidColorBrush x:Key="TextBrush">#ffffff</SolidColorBrush>
    <SolidColorBrush x:Key="KeyPointBrush">#b330b7</SolidColorBrush>

    <!--Image rendering-->
    <Style TargetType="Image">
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
    </Style>
    <!--Text rendering-->
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
    </Style>
    <Style TargetType="{x:Type Label}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
    </Style>

    <!-- font embed -->
    <FontFamily x:Key="GmarketSansB">/resources/fonts/GmarketSansBold.otf#G마켓 산스 Bold</FontFamily>
    <FontFamily x:Key="GmarketSansM">/resources/fonts/GmarketSansMedium.otf#G마켓 산스 Medium</FontFamily>
    <FontFamily x:Key="SCDream3">/resources/fonts/SCDream3.otf#에스코어 드림 3 Light</FontFamily>
    <FontFamily x:Key="SCDream5">/resources/fonts/SCDream5.otf#에스코어 드림 5 Medium</FontFamily>
    <FontFamily x:Key="SCDream9">/resources/fonts/SCDream9.otf#에스코어 드림 9 Black</FontFamily>

    <Style x:Name="mainBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="{StaticResource GmarketSansM}"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" CornerRadius="5" BorderThickness="2" Padding="2" BorderBrush="{StaticResource KeyPointBrush}" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource KeyPointBrush}"/>

                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource KeyPointBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TextBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="subBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Background" Value="{StaticResource HeavyGreyBrush}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="{StaticResource GmarketSansM}"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" CornerRadius="4" BorderThickness="3" Padding="2" BorderBrush="Transparent" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MediumGreyBrush}"/>

                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MediumGreyBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TextBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--COMBOBOX-->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="2"
                  Background="{StaticResource HeavyGreyBrush}"
                  BorderBrush="{StaticResource HeavyGreyBrush}"
                  BorderThickness="3" />
            <Border 
                  Grid.Column="0"
                  CornerRadius="2" 
                  Margin="1" 
                  Background="{StaticResource HeavyGreyBrush}" 
                  BorderBrush="{StaticResource HeavyGreyBrush}"
                  BorderThickness="0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="{StaticResource MediumGreyBrush}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="8,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Left"
                            Margin="8,3,23,3"
                            Focusable="True" 
                            Background="{StaticResource HeavyGreyBrush}"
                            Foreground="{StaticResource TextBrush}"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="{StaticResource HeavyGreyBrush}"
                                CornerRadius="3"
                                BorderThickness="1"
                                BorderBrush="Transparent"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource MediumGreyBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="3"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!-- SimpleStyles: ComboBoxItem -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MediumGreyBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource MediumGreyBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- https://sa.ndeep.me/post/apple-style-scrollbar-in-wpf/-->
    <!--Scrollbar Thumbs-->
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                        <Border x:Name="Rectangle1" CornerRadius="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--ScrollBars-->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{StaticResource MediumGreyBrush}" />
        <Setter Property="Background" Value="{StaticResource HeavyGreyBrush}" />
        <Setter Property="Width" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>
                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="Auto" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--FlowDocumentScrollViewer-->
    <Style TargetType="{x:Type FlowDocument}" x:Key="{x:Static markdig:Styles.DocumentStyleKey}">
        <Setter Property="FontFamily" Value="{StaticResource SCDream3}" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="Foreground" Value="#FF848D91" />
    </Style>
    <Style TargetType="{x:Type Paragraph}">
        <Setter Property="Margin" Value="0,5,0,5" />
        <Setter Property="FontSize" Value="16" />
    </Style>
    <Style TargetType="{x:Type List}">
        <Setter Property="Margin" Value="10,0,0,0" />
        <Setter Property="Padding" Value="16,0,0,0" />
    </Style>
    <Style TargetType="{x:Type Paragraph}" x:Key="{x:Static markdig:Styles.CodeBlockStyleKey}">
        <Setter Property="Background" Value="#22FFFFFF" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="FontFamily" Value="{StaticResource SCDream3}" />
    </Style>
    <Style TargetType="{x:Type Run}" x:Key="{x:Static markdig:Styles.CodeStyleKey}">
        <Setter Property="Background" Value="#22FFFFFF" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="FontFamily" Value="{StaticResource SCDream3}" />
    </Style>
    <Style TargetType="{x:Type Paragraph}" x:Key="{x:Static markdig:Styles.Heading1StyleKey}">
        <Setter Property="FontSize" Value="32" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="FontFamily" Value="{StaticResource SCDream9}" />
        <Setter Property="Margin" Value="0,20,0,5" />
    </Style>
    <Style TargetType="{x:Type Paragraph}" x:Key="{x:Static markdig:Styles.Heading2StyleKey}">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="FontFamily" Value="{StaticResource SCDream9}" />
        <Setter Property="Margin" Value="0,20,0,5" />
    </Style>
    <Style TargetType="{x:Type Paragraph}" x:Key="{x:Static markdig:Styles.Heading3StyleKey}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="FontFamily" Value="{StaticResource SCDream5}" />
        <Setter Property="Margin" Value="0,20,0,5" />
    </Style>
    <Style TargetType="{x:Type Paragraph}" x:Key="{x:Static markdig:Styles.Heading4StyleKey}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="#ff000000" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="FontFamily" Value="{StaticResource SCDream5}" />
        <Setter Property="Margin" Value="0,20,0,5" />
    </Style>
    <Style TargetType="{x:Type Paragraph}" x:Key="{x:Static markdig:Styles.Heading5StyleKey}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="FontFamily" Value="{StaticResource SCDream5}" />
        <Setter Property="Margin" Value="0,20,0,5" />
    </Style>
    <Style TargetType="{x:Type Paragraph}" x:Key="{x:Static markdig:Styles.Heading6StyleKey}">
        <Setter Property="FontSize" Value="13.5" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="FontFamily" Value="{StaticResource SCDream3}" />
        <Setter Property="Margin" Value="0,20,0,5" />
    </Style>
    <Style TargetType="{x:Type Hyperlink}" x:Key="{x:Static markdig:Styles.HyperlinkStyleKey}">
        <Setter Property="Foreground" Value="#FF848D91" />
        <Setter Property="FontFamily" Value="{StaticResource SCDream3}" />
    </Style>
    <Style TargetType="{x:Type Image}" x:Key="{x:Static markdig:Styles.ImageStyleKey}">
        <Setter Property="MaxHeight" Value="{Binding RelativeSource={RelativeSource Self}, Path=Source.(BitmapSource.PixelHeight)}" />
        <Setter Property="MaxWidth" Value="{Binding RelativeSource={RelativeSource Self}, Path=Source.(BitmapSource.PixelWidth)}" />
        <Setter Property="Margin" Value="0,20,0,20" />
    </Style>
    <Style TargetType="{x:Type Section}" x:Key="{x:Static markdig:Styles.QuoteBlockStyleKey}">
        <Setter Property="BorderBrush" Value="#FFFFFFFF" />
        <Setter Property="BorderThickness" Value="4,0,0,0" />
        <Setter Property="Foreground" Value="#FF848D91" />
        <Setter Property="Padding" Value="16,0,0,0" />
        <Setter Property="Margin" Value="0,20,0,20" />
    </Style>
    <Style TargetType="{x:Type Table}" x:Key="{x:Static markdig:Styles.TableStyleKey}">
        <Setter Property="BorderBrush" Value="#FFFFFFFF"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="CellSpacing" Value="0"/>
    </Style>
    <Style TargetType="{x:Type TableCell}" x:Key="{x:Static markdig:Styles.TableCellStyleKey}">
        <Setter Property="BorderBrush" Value="#FFFFFFFF"/>
        <Setter Property="BorderThickness" Value="1,1,0,0"/>
    </Style>
    <Style TargetType="{x:Type TableRow}" x:Key="{x:Static markdig:Styles.TableHeaderStyleKey}">
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <Style TargetType="{x:Type CheckBox}" x:Key="{x:Static markdig:Styles.TaskListStyleKey}">
        <Setter Property="Margin" Value="0,0,0,-2" />
    </Style>
    <Style TargetType="{x:Type Line}" x:Key="{x:Static markdig:Styles.ThematicBreakStyleKey}">
        <Setter Property="Stretch" Value="Fill" />
        <Setter Property="Stroke" Value="#FFFFFFFF" />
        <Setter Property="Margin" Value="0,20,0,20" />
    </Style>
    <Style TargetType="{x:Type Span}" x:Key="{x:Static markdig:Styles.SubscriptStyleKey}">
        <Setter Property="Typography.Variants" Value="Subscript" />
    </Style>
    <Style TargetType="{x:Type Span}" x:Key="{x:Static markdig:Styles.SuperscriptStyleKey}">
        <Setter Property="Typography.Variants" Value="Superscript" />
    </Style>
    <Style TargetType="{x:Type Span}" x:Key="{x:Static markdig:Styles.StrikeThroughStyleKey}">
        <Setter Property="TextBlock.TextDecorations" Value="Strikethrough" />
    </Style>
    <Style TargetType="{x:Type Span}" x:Key="{x:Static markdig:Styles.InsertedStyleKey}">
        <Setter Property="TextBlock.TextDecorations" Value="Underline" />
    </Style>
    <Style TargetType="{x:Type Span}" x:Key="{x:Static markdig:Styles.MarkedStyleKey}">
        <Setter Property="Background" Value="Yellow" />
    </Style>

</ResourceDictionary>